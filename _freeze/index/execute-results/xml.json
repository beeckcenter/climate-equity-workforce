{
  "hash": "7943690dad9259b43b64f1ad10fbb0b9",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Climate resilience requires equitable access to quality green energy jobs. St. Paul is at the forefront.\nauthor:\n  - name: Elham Ali\n    corresponding: true\n    email: elham.ali@georgetown.edu\n    roles:\n      - Researcher\n      - Data Storytelling\n      - Human-centered Design\n      - Data Visualization\n    affiliations:\n      - Beeck Center for Social Impact and Innovation at Georgetown University\nlicense: CC BY-SA 4.0\nkeywords:\n  - climate justice\n  - climate-ready workforce\n  - green jobs\n  - climate change\n  - equity\ndate: '2024-09-19'\nabstract: |\n  Minnesota, particularly the City of Saint Paul, has seen a surge in climate resilience funding aimed at expanding green energy job opportunities. However, BIPOC communities remain underrepresented in these jobs and disproportionately suffer from the adverse effects of human-driven climate change.\nkeypoints:\n  - climate change\n  - green jobs\n  - workforce hiring\ncitation:\n  container-title: Beeck Center for Social Impact and Innovation\ndraft: false\nbibliography: references.bib\n# reference-location: margin\n# citation-location: margin\necho: true\nwarning: false\n---\n\n\n\n\n\n## Background\n\nThis analysis looks at access to green energy jobs (like energy efficiency, renewable energy, and green construction) by race/ethnicity, gender, education, and income in St. Paul, Minnesota, USA.\n\n## Research Questions\n\nHere are some of the questions I will explore using different datasets:\n\n-   How much climate resilience funding has St. Paul received?\n-   What specific green jobs are being created in St. Paul (e.g., energy efficiency, renewable energy, green construction)?\n-   What is the quality of these jobs? How much do they pay? What qualifications are needed (education and experience)?\n-   Who is getting these jobs, based on education, race/ethnicity, gender, and income levels?\n\n## Data Sources\n\nThe data for this project comes from:\n\n-   The National Center for O\\*NET Development\n-   2023 Occupational Employment and Wage Survey\n-   Urban Institute 11 elements of job quality: Clean Energy Job Quality and Education Data\n-   National and local demographic data from the 2022 American Community Survey Public Use Microdata Sample (ACS PUMS)\n-   US Census Bureau's 2023 QuickFacts tool\n-   Invest.gov\n-   Geocorr from the Missouri Census Data Center\n\nI will reduce each large dataset to focus only on questions related to green jobs and job quality. Please note that some datasets have already been pre-processed in Python with specific filters applied. You can find the original raw datasets in the data folder for reference.\n\n## Analysis\n\nI will look at each question one by one and clean the data as I go. Some datasets might need to be combined, so I will organize the data during the analysis before exploring the results.\n\n### Load packages and libraries\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## For folder structure\nlibrary(here)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nhere() starts at /Users/elhamali/Documents/Data Projects/climate-equity-workforce\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(ezknitr)\n\n## For data import/cleaning\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(purrr)\nlibrary(rlang)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\nAttaching package: 'rlang'\n\nThe following objects are masked from 'package:purrr':\n\n    %@%, flatten, flatten_chr, flatten_dbl, flatten_int, flatten_lgl,\n    flatten_raw, invoke, splice\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(forcats)\nlibrary(readxl)\n\n## For graphing\nlibrary(highcharter)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nRegistered S3 method overwritten by 'quantmod':\n  method            from\n  as.zoo.data.frame zoo \n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(igraph)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\nAttaching package: 'igraph'\n\nThe following object is masked from 'package:rlang':\n\n    is_named\n\nThe following objects are masked from 'package:lubridate':\n\n    %--%, union\n\nThe following objects are masked from 'package:dplyr':\n\n    as_data_frame, groups, union\n\nThe following objects are masked from 'package:purrr':\n\n    compose, simplify\n\nThe following object is masked from 'package:tidyr':\n\n    crossing\n\nThe following object is masked from 'package:tibble':\n\n    as_data_frame\n\nThe following objects are masked from 'package:stats':\n\n    decompose, spectrum\n\nThe following object is masked from 'package:base':\n\n    union\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(RColorBrewer)\nlibrary(htmlwidgets)\n# library(viridis)\n```\n:::\n\n\n\n\n\n### 1. Climate Resilience Funding for St. Paul\n\n::: callout-note\n## RQ 1: How much climate resilience funding has St. Paul received?\n\nThe total amount of funding **Minnesota** received for climate resilience as of June 2024 is **\\$7,101,423,527**\n\nThe total amount of funding **St. Paul** received for climate resilience as of June 2024 is **\\$446,286,762**\n\nSt. Paul's funding is **6.28 %** of Minnesota's total funding.\n\nAlmost **95%** of St. Paul's funding goes to transportation efforts. Clean energy, buildings and manufacturing received less than **2%** of funding.\n:::\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# Import data\nfunding <- read_csv(here(\"processed_data\", \"FundingSummary.csv\"))\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nRows: 49535 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (14): Agency Name, Bureau Name, Program Name, Category, Subcategory, Pro...\ndbl  (1): Unique ID\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nsaveRDS(funding, here(\"processed_data\", \"funding.rds\"))\n\nfunding <- readRDS(here(\"processed_data\", \"funding.rds\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n### Convert the `Funding Amount` to numeric and handling commas in the values\n\nfunding <- funding %>%\n  mutate(`Funding Amount` = as.numeric(gsub(\",\", \"\", `Funding Amount`)))\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `Funding Amount = as.numeric(gsub(\",\", \"\", `Funding Amount`))`.\nCaused by warning:\n! NAs introduced by coercion\n```\n\n\n:::\n:::\n\n\n\n\n\n#### Filter for MN State and City of St. Paul\n\nFirst, I will filter the dataset by State: **Minnesota**, and then narrow it down further to focus on the **City of St. Paul** and the surrounding region. Please note that St. Paul is part of the **Minneapolis-St. Paul-Bloomington, MN-WI** region, so I'll ensure it's included within that larger metropolitan area.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# Filter for Minnesota funding\nminnesota_funding <- funding %>%\n  filter(State == \"Minnesota\")\n\nsaveRDS(minnesota_funding, here(\"processed_data\", \"minnesota_funding.rds\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# Further filter for St. Paul, considering variations in city names\nst_paul_funding <- minnesota_funding %>%\n  filter(str_detect(City, regex(\"Saint Paul|St. Paul|South St. Paul|Minneapolis--St. Paul|Minneapolis-St. Paul\", ignore_case = TRUE)))\n\nsaveRDS(st_paul_funding, here(\"processed_data\", \"st_paul_funding.rds\"))\n\n# glimpse(st_paul_funding)\n```\n:::\n\n\n\n\n\n#### Calculate funding for MN State and City of St. Paul\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nminnesota_funding <- readRDS(here(\"processed_data\", \"minnesota_funding.rds\"))\nst_paul_funding <- readRDS(here(\"processed_data\", \"st_paul_funding.rds\"))\n\n# Calculate total funding for Minnesota\ntotal_minnesota_funding <- minnesota_funding %>%\n  summarise(total_funding = sum(`Funding Amount`, na.rm = TRUE))\n\ncat(\"The total amount of funding Minnesota received for climate as of June 2024 is $\", \n    format(total_minnesota_funding$total_funding, big.mark = \",\"), \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nThe total amount of funding Minnesota received for climate as of June 2024 is $ 7,101,423,527 \n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n# Calculate total funding for St. Paul\ntotal_st_paul_funding <- st_paul_funding %>%\n  summarise(total_funding = sum(`Funding Amount`, na.rm = TRUE))\n\ncat(\"The total amount of funding St. Paul received for climate as of June 2024 is $\", \n    format(total_st_paul_funding$total_funding, big.mark = \",\"), \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nThe total amount of funding St. Paul received for climate as of June 2024 is $ 446,286,762 \n```\n\n\n:::\n:::\n\n\n\n\n\n#### Calculate fraction of St. Paul's funding from MN's\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nminnesota_funding <- readRDS(here(\"processed_data\", \"minnesota_funding.rds\"))\nst_paul_funding <- readRDS(here(\"processed_data\", \"st_paul_funding.rds\"))\n\n# Calculate total funding for Minnesota\ntotal_minnesota_funding <- minnesota_funding %>%\n  summarise(total_funding = sum(`Funding Amount`, na.rm = TRUE)) %>%\n  pull(total_funding)\n\n# Calculate total funding for St. Paul\ntotal_st_paul_funding <- st_paul_funding %>%\n  summarise(total_funding = sum(`Funding Amount`, na.rm = TRUE)) %>%\n  pull(total_funding)\n\n# Calculate the fraction of St. Paul's funding from Minnesota's total funding\nfraction_st_paul <- total_st_paul_funding / total_minnesota_funding\n\n# Output the results\ncat(\"The fraction of St. Paul's funding from Minnesota's total funding is: \", \n    round(fraction_st_paul, 4), \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nThe fraction of St. Paul's funding from Minnesota's total funding is:  0.0628 \n```\n\n\n:::\n\n```{.r .cell-code .hidden}\ncat(\"This means St. Paul's funding is\", round(fraction_st_paul * 100, 2), \"% of Minnesota's total funding.\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nThis means St. Paul's funding is 6.28 % of Minnesota's total funding.\n```\n\n\n:::\n:::\n\n\n\n\n\n#### Visualize categories of funding for St. Paul\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# Group the St. Paul data by Category and calculate the total funding for each category\nst_paul_category_funding <- st_paul_funding %>%\n  group_by(Category) %>%\n  summarise(total_funding = sum(`Funding Amount`, na.rm = TRUE)) %>%\n  arrange(desc(total_funding))\n\ncolors <- brewer.pal(n = length(unique(st_paul_category_funding$Category)), \"Set3\")\n\n# Create an interactive bar chart using highcharter\nhchart_bar <- highchart() %>%\n  hc_chart(type = \"bar\") %>%\n  hc_xAxis(categories = st_paul_category_funding$Category, title = list(text = \"Category\")) %>%\n  hc_yAxis(title = list(text = \"Total Funding ($)\"), labels = list(format = \"{value:,.0f}\")) %>%\n  hc_add_series(name = \"Total Funding\", \n                data = st_paul_category_funding$total_funding, \n                colorByPoint = TRUE, \n                colors = colors) %>%\n  hc_title(text = \"Total Funding by Category in St. Paul\") %>%\n  hc_tooltip(pointFormat = \"Total Funding: ${point.y:,.0f}\") %>%\n  hc_exporting(\n    enabled = TRUE,\n    buttons = list(contextButton = list(menuItems = c(\"downloadPNG\", \"downloadJPEG\", \"downloadSVG\", \"downloadPDF\")))\n  )\n\n# Saving the chart as an HTML file\nsaveWidget(hchart_bar, file = here(\"graphs\", \"st_paul_funding_bar.html\"))\n```\n:::\n\n\n\n\n\nA quick glance tells us that almost **95%** of St. Paul's funding goes to transportation efforts. Clean energy, buildings and manufacturing received less than **2%** of funding.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# Create an interactive pie chart using highcharter\nhchart_pie <- highchart() %>%\n  hc_chart(type = \"pie\") %>%\n  hc_add_series(name = \"Total Funding\", \n                data = list_parse2(st_paul_category_funding %>% \n                                   mutate(name = Category, y = total_funding)), \n                colors = colors) %>%\n  hc_title(text = \"Total Funding by Category in St. Paul\") %>%\n  hc_tooltip(pointFormat = \"Total Funding: ${point.y:,.0f}\") %>%\n  hc_plotOptions(pie = list(innerSize = '50%', dataLabels = list(enabled = TRUE))) %>%\n  hc_exporting(\n    enabled = TRUE,\n    buttons = list(contextButton = list(menuItems = c(\"downloadPNG\", \"downloadJPEG\", \"downloadSVG\", \"downloadPDF\")))\n  )\n\nsaveWidget(hchart_pie, file = here(\"graphs\", \"st_paul_funding_pie.html\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n## Export the funding data to CSV for graphing\nwrite.csv(minnesota_funding, here(\"processed_data\", \"minnesota_funding.csv\"), row.names = FALSE)\nwrite.csv(st_paul_funding, here(\"processed_data\", \"st_paul_funding.csv\"), row.names = FALSE)\n```\n:::\n\n\n\n\n\n### 2. Types of Green Jobs in St. Paul\n\n### 3. Quality, Pay, and Qualifications of Green Jobs\n\n### 4. Demographics of Green Job Recipients\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}